{"version":3,"file":"static/js/682.a8a6162e.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} alt=\"Error\"/>\r\n  )\r\n}\r\n\r\nexport default ErrorMessage\r\n","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport { setContentWithNewLoadingData } from '../../utils/setContent';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n    const [comicList, setComicList] = useState([]);\r\n    const [newComicLoading, setNewComicLodaing] = useState(false);\r\n    const [offset, setOffset] = useState(100);\r\n    const [comicEnded, setComicEnded] = useState(false);\r\n    \r\n    const {getAllComics, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setNewComicLodaing(false) : setNewComicLodaing(true);\r\n        getAllComics(offset)\r\n            .then(onComicLoaded)\r\n            .then(() => setProcess('confirmed'))\r\n    }\r\n\r\n    const onComicLoaded = (newComicList) => {\r\n        let ended = false;\r\n        if (newComicList < 8) {\r\n            ended = true;\r\n        }\r\n\r\n        setComicList([...comicList, ...newComicList]);\r\n        setOffset(offset => offset + 8);\r\n        setNewComicLodaing(newComicLoading => false);\r\n        setComicEnded(comicEnded => ended);\r\n    } \r\n\r\n    function renderItems(arr) {\r\n        const items = arr.map((comic, i) => {\r\n            const imgStyle = {objectFit: 'cover'}\r\n            if (comic.thumbnail === \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\") {\r\n                imgStyle.objectFit = 'contain'\r\n            }\r\n\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${comic.id}`}>\r\n                        <img \r\n                            src={comic.thumbnail} \r\n                            alt={comic.name} \r\n                            className=\"comics__item-img\"\r\n                            style={imgStyle}\r\n                            />\r\n                        <div className=\"comics__item-name\">{comic.title}</div>\r\n                        <div className=\"comics__item-price\">{comic.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )    \r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContentWithNewLoadingData(process, () => renderItems(comicList), newComicLoading)}\r\n            <button \r\n            className=\"button button__main button__long\"\r\n            onClick={() => onRequest(offset)}\r\n            disabled={newComicLoading}\r\n            style={{display: comicEnded ? 'none' : 'block'}}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\n\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta\r\n            name=\"description\"\r\n            content=\"Page with list of our comics\"\r\n          />\r\n          <title>Comix page</title>\r\n      </Helmet>\r\n      <AppBanner/>\r\n      <ComicsList/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [process, setProcess] = useState('waiting')\r\n\r\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'application/json'}) => {\r\n      setProcess('loading')\r\n      \r\n      try {\r\n        const response = await fetch(url, {method, body, headers});\r\n\r\n        if (!response.ok) {\r\n          throw new Error(response.status);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n        \r\n      } catch(e) {\r\n        setProcess('error')\r\n        throw e;\r\n      }\r\n\r\n  }, []);\r\n\r\n  const clearError = useCallback(() => {\r\n    setProcess('loading')\r\n  }, []);\r\n\r\n  return { request, clearError, process, setProcess}\r\n\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n  const {request, clearError, process, setProcess} = useHttp();\r\n\r\n  const _apiBase = \"https://gateway.marvel.com:443/v1/public/\";\r\n  const _apiKey = \"apikey=8dc87586c41220020ff212b5e2226108\";\r\n  const _baseOffset = 210;\r\n  \r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformCharacter);\r\n  }\r\n  \r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  const getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharacter);\r\n\t};\r\n    \r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      name: char.name,\r\n      description: char.description ? `${char.description.slice(0, 200)}...` : 'Нет описания для этого персонажа...',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homePage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      id: char.id,\r\n      comics: char.comics.items\r\n    }\r\n  }\r\n\r\n  const getAllComics = async (offset = _baseOffset) => {\r\n    const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComic);\r\n  }\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComic(res.data.results[0]);\r\n  }\r\n\r\n  const _transformComic = (comic) => {\r\n    return {\r\n      title: comic.title,\r\n      id: comic.id,\r\n      description: comic.description || \"Описание отсутствует\",\r\n      thumbnail: `${comic.thumbnail.path}.${comic.thumbnail.extension}`,\r\n      language: comic.textObjects[0]?.language || \"en-us\",\r\n      pageCount: comic.pageCount ? \r\n                `${comic.pageCount} pages` : \r\n                'Колличество страниц не известно',\r\n      price: comic.prices[0].price ? \r\n                `${comic.prices[0].price} $` :\r\n                 'Неизвестно',\r\n    }\r\n  }\r\n\r\n  return {\r\n          process,\r\n          setProcess, \r\n          getAllCharacters, \r\n          getCharacter, \r\n          clearError, \r\n          getAllComics, \r\n          getComic, \r\n          getCharacterByName\r\n        }\r\n}\r\n\r\nexport default useMarvelService;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Spinner from '../components/spinner/Spinner';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nexport const setContent = (process, Component, data) => {\r\n  switch(process) {\r\n      case 'waiting':\r\n          return <Skeleton/>\r\n      case 'loading':\r\n          return <Spinner/>\r\n      case 'confirmed':\r\n          return <Component data={data} />;\r\n      case 'error':\r\n          return <ErrorMessage/>\r\n      default: \r\n          throw new Error('Unexpected process state');\r\n  }\r\n}\r\n\r\nexport const setContentWithNewLoadingData = (process, Component, newItemData) => {\r\n    switch(process) {\r\n        case 'waiting':\r\n            return <Spinner/>\r\n        case 'loading':\r\n            return newItemData ? <Component/> : <Spinner/>\r\n        case 'confirmed':\r\n            return <Component/>;\r\n        case 'error':\r\n            return <ErrorMessage/>\r\n        default: \r\n            throw new Error('Unexpected process state');\r\n    }\r\n}"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","ComicsList","comicList","setComicList","useState","newComicLoading","setNewComicLodaing","offset","setOffset","comicEnded","setComicEnded","getAllComics","process","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicLoaded","newComicList","ended","setContentWithNewLoadingData","arr","items","map","comic","i","imgStyle","thumbnail","Link","to","concat","id","name","title","price","renderItems","onClick","disabled","ComicsPage","_Fragment","Helmet","content","request","clearError","useHttp","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homePage","urls","wiki","comics","_transformComic","_comic$textObjects$","language","textObjects","pageCount","prices","getAllCharacters","data","results","getCharacter","res","getComic","getCharacterByName","Skeleton","setContent","Component","Spinner","newItemData"],"sourceRoot":""}